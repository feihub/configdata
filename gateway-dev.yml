server:
  port: 8086
  servlet:
    session:
      cookie:
        name: GATEWAY-OAUTH2-CLIENT-SESSIONID
management:
  endpoints:
    web:
      exposure:
        include: "*"

hystrix.command.fallbackcmd.execution.isolation.thread.timeoutInMilliseconds: 5000

spring:
  zipkin:
    baseUrl: http://zipkin/
  sleuth:
    sampler:
      probability: 1.0
  cloud:
    gateway:
      default-filters:
      routes:
        - id: business
          uri: lb://business
          predicates:
            - Path=/business/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@hostAddrKeyResolver}'
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 3
        - id: business2
          uri: lb://business2
          predicates:
            - Path=/business2/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@hostAddrKeyResolver}'
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 3
        - id: hystrix
          uri: lb://hystrix
          predicates:
            - Path=/hystrix/**
          filters:
            - StripPrefix=1
            - name: Hystrix
              args:
                name: fallbackcmd
                fallbackUri: forward:/fallback

  redis:
    host: localhost
    port: 6379
    database: 0

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  security:
    oauth2:
      client:
        clientId: admin
        clientSecret: password
        userAuthorizationUri: http://localhost:8016/oauth/authorize
        accessTokenUri: http://localhost:8016/oauth/access_token
        clientAuthenticationScheme: form
      resource:
        userInfoUri: http://localhost:8016/user/info
        preferTokenInfo: false

business:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule

business2:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule

logging:
  level:
    org.springframework.cloud: DEBUG
