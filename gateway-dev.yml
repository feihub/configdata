server:
  port: 8086

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8084/eureka/

management:
  endpoints:
    web:
      exposure:
        include: hystrix.stream,refresh

spring:
  zipkin:
    baseUrl: http://log/
  sleuth:
    sampler:
      probability: 1.0
  cloud:
    gateway:
      default-filters:
      routes:
        - id: business
          uri: lb://business
          predicates:
            - Path=/business/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@hostAddrKeyResolver}'
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 3
        - id: business2
          uri: lb://business2
          predicates:
            - Path=/business2/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@hostAddrKeyResolver}'
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 3

  redis:
    host: localhost
    port: 6379
    database: 0

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

business:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule

business2:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule

logging:
  level:
    org.springframework.cloud: DEBUG
